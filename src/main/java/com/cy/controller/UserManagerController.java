package com.cy.controller;import com.cy.bean.DrugClassification;import com.cy.bean.PhamacyDrug;import com.cy.bean.PhamacyReceive;import com.cy.biz.PhamacyService;import com.cy.util.StringUtils;import com.github.pagehelper.PageInfo;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import sun.misc.BASE64Decoder;import javax.servlet.ServletOutputStream;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.io.IOException;import java.util.HashMap;import java.util.List;import java.util.Map;@Controller@RequestMapping("/userPage")public class UserManagerController {    private Map<String,Object> map = new HashMap<>();    @Autowired    private PhamacyService phamacyService;    //前台药品展示    @RequestMapping("/selectPhamacyDrugs.action")    public String selectPhamacyReceive(HttpServletRequest request, String num , String state,String drugName){        if(!StringUtils.isEmpty(state)){            map.put("state",state);        }if(!StringUtils.isEmpty(drugName)){            map.put("drugName",drugName);        }        PageInfo<PhamacyDrug> phamacyDrugPageInfo = phamacyService.selectPhamacyAllDrugsPageInfo(map, num, 10);        List<DrugClassification> drugClassification = phamacyService.selectDrugClassification();                if (phamacyDrugPageInfo!=null && drugClassification!= null) {            map.clear();            HttpSession session = request.getSession();            request.setAttribute("phamacyReceive",phamacyDrugPageInfo);            request.setAttribute("drugClassification",drugClassification);            return "/userPage/pharacyDrugs";        } else {            return "error";        }    }          //查询药品详情    @RequestMapping("/selectPhamacyDrugDetils.action")    public  String selectPhamacyDrugReceiveDetils(HttpServletRequest request, String receiverId ){                if(!StringUtils.isEmpty(receiverId)){            int a = Integer.parseInt(receiverId);            PhamacyDrug phamacyDrug  = phamacyService.selectByIdPhamacyDrug(a);            request.setAttribute("phamacyDrug",phamacyDrug);        }        return "userPage/pharacyDrugsDetils";    }    @RequestMapping(value="/images.action",method=RequestMethod.GET)    public void images(HttpServletRequest request, HttpServletResponse response, String receiverId) throws IOException {        if (!StringUtils.isEmpty(receiverId)) {            PhamacyDrug phamacyDrug = phamacyService.selectByIdPhamacyDrug(Integer.parseInt(receiverId));            byte[] byteAry = phamacyDrug.getDrugPhoto().getBytes();            String data = new String(byteAry, "UTF-8");            BASE64Decoder encoder = new BASE64Decoder();            byte[] bytes = encoder.decodeBuffer(data);            for (int i = 0; i < bytes.length; i++) {                if (bytes[i] < 0) {                    bytes[i] += 256;                }            }            response.setContentType("image/jpeg");            ServletOutputStream out = response.getOutputStream();            out.write(bytes);            out.flush();            out.close();        }    }}