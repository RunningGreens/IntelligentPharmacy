package com.cy.biz.bizImp;import com.cy.bean.DrugClassification;import com.cy.bean.PhamacyDrug;import com.cy.bean.PhamacyReceive;import com.cy.bean.Receive;import com.cy.biz.PhamacyService;import com.cy.mapper.AlarmDrugManager;import com.cy.mapper.PhamacyDrugManager;import com.cy.util.StringUtils;import com.github.pagehelper.PageHelper;import com.github.pagehelper.PageInfo;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import javax.annotation.Resource;import java.util.List;import java.util.Map;@Servicepublic class PhamacyServiceImp implements PhamacyService {    @Autowired    private PhamacyDrugManager phamacyDrugManager;    @Autowired    private AlarmDrugManager alarmDrugManager;    @Autowired    private PhamacyDrug phamacyDrug;    //MyBatis药房药品翻页    public PageInfo<PhamacyDrug> selectPhamacyAllDrugsPageInfo(Map<String, Object> map, String page, int size) {        int page1=0;        if(StringUtils.isEmpty(page)){            page1 = Integer.parseInt(page="1");        }else{            page1 = Integer.parseInt(page);        }        PageHelper.startPage(page1,size);        //selectByUsers调用的是前面没分页的方法        List<PhamacyDrug> phamacyDrugsPageInfo = phamacyDrugManager.selectAllPhamacyDrug(map);        PageInfo<PhamacyDrug> phamacyAllDrugsPageInfo = new PageInfo<PhamacyDrug>(phamacyDrugsPageInfo);        return phamacyAllDrugsPageInfo;    }    //查询药品详细信息    public PhamacyDrug selectByIdPhamacyDrug(int pharmacyId ){      PhamacyDrug phamacyDrug = phamacyDrugManager.selectPhamacyDrug(pharmacyId);      return phamacyDrug;    }    //查询药品分类信息    public List<DrugClassification> selectDrugClassification(){        List<DrugClassification> drugClassification =  phamacyDrugManager.selectAllDrugClassification();        return drugClassification;    }    //通过药品分类id查询药品信息    public PageInfo<PhamacyDrug> selectPhamacyClassificationdDrug(int drugClassificationId,String page, int size){        int page1=0;        if(StringUtils.isEmpty(page)){            page1 = Integer.parseInt(page="1");        }else{            page1 = Integer.parseInt(page);        }        //selectByUsers调用的是前面没分页的方法        PageHelper.startPage(page1,size);        List<PhamacyDrug> phamacyReceiveListPageInfo = phamacyDrugManager.selectDrugClassificationPhamacyDrug(drugClassificationId);        PageInfo<PhamacyDrug> phamacyDrugs = new PageInfo<PhamacyDrug>(phamacyReceiveListPageInfo);        return phamacyDrugs;    }    //增加药品请领单    public int addPhamacyReceiveDrugs(List<PhamacyReceive> receiveList){        int result =  phamacyDrugManager.addReceiverDrugs(receiveList);        return result;    }    //药房药品盘点    public int checkPhamacyDrugsList(List<PhamacyDrug> PhamacyDrug){        int result = phamacyDrugManager.checkPhamacyDrugs(PhamacyDrug);        return result;    }    //药房药品审核单    public PageInfo<PhamacyReceive> selectPhamacyReceivePageInfo(Map<String, Object> map, String page, int size) {        int page1=0;        if(StringUtils.isEmpty(page)){            page1 = Integer.parseInt(page="1");        }else{            page1 = Integer.parseInt(page);        }        //selectByUsers调用的是前面没分页的方法        PageHelper.startPage(page1,size);        List<PhamacyReceive> phamacyReceiveListPageInfo = phamacyDrugManager.selectPhamacyReceiveDrug(map);        PageInfo<PhamacyReceive> phamacyReceiveList = new PageInfo<PhamacyReceive>(phamacyReceiveListPageInfo);        return phamacyReceiveList;    }    //药房药品请领删除    public int delectPhamacyReceives(int receiverId){        int result=0;        result = phamacyDrugManager.delectPhamacyReceive(receiverId);        return result;    }        //药房报损申请查看图片    public PhamacyReceive selectPhamacyImage(int receiverId){        PhamacyReceive   result = phamacyDrugManager.selectReceivePhamacyDrug(receiverId);        return result;    }    //药房药品请领修改状态    public int updatePhamacyReceives(PhamacyReceive phamacyReceive){        int result=0;        result = phamacyDrugManager.updatePhamacyReceive(phamacyReceive);        if(phamacyReceive.getReceiverDrug().contains("调价")){        result = phamacyDrugManager.phamacyDrugsPrice(phamacyReceive);        }else if(phamacyReceive.getReceiverDrug().contains("退库")||phamacyReceive.getReceiverDrug().contains("销售")){            PhamacyDrug phamacyDrug = phamacyDrugManager.selectPhamacyDrug(phamacyReceive.getPharmacyId());            int a = phamacyDrug.getDrugQuantity()- phamacyReceive.getPhamacyDrugQuantity();            phamacyReceive.setPhamacyDrugQuantity(a);            result = phamacyDrugManager.phamacyDrugsBack(phamacyReceive);        }else if(phamacyReceive.getReceiverDrug().contains("请领")){            PhamacyDrug phamacyDrug = phamacyDrugManager.selectPhamacyDrug(phamacyReceive.getPharmacyId());            int a = phamacyDrug.getDrugQuantity()+ phamacyReceive.getPhamacyDrugQuantity();            phamacyReceive.setPhamacyDrugQuantity(a);            result = phamacyDrugManager.phamacyDrugsBack(phamacyReceive);        }        return result;    }    //药房申请类通过药品名查询药品    public PageInfo<PhamacyDrug> selectPhamacyDrugsPage(String drugName, String page, int size) {        int page1=0;        if(StringUtils.isEmpty(page)){            page1 = Integer.parseInt(page="1");        }else{            page1 = Integer.parseInt(page);        }        //selectByUsers调用的是前面没分页的方法        PageHelper.startPage(page1,size);        List<PhamacyDrug> phamacyReceiveListPageInfo = phamacyDrugManager.selectPhamacyDrugs(drugName);        PageInfo<PhamacyDrug> phamacyDrugsList = new PageInfo<PhamacyDrug>(phamacyReceiveListPageInfo);        return phamacyDrugsList;    }    public PhamacyDrugManager getPhamacyDrugManager() {        return phamacyDrugManager;    }    public void setPhamacyDrugManager(PhamacyDrugManager phamacyDrugManager) {        this.phamacyDrugManager = phamacyDrugManager;    }}