package com.cy.biz.bizImp;import com.cy.bean.*;import com.cy.biz.AlarmService;import com.cy.mapper.AlarmDrugManager;import com.cy.util.StringUtils;import com.github.pagehelper.PageHelper;import com.github.pagehelper.PageInfo;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;import java.util.Map;@Servicepublic class AlarmServiceImp implements AlarmService {    @Autowired      private AlarmDrugManager alarmDrugManager;    @Override    public Admin selectRoleName(String adminName) {        Admin loginAdminList = alarmDrugManager.selectRoleName(adminName);        return loginAdminList;    }    @Override    public boolean addAlarm(Alarm alarm) {        boolean b = alarmDrugManager.addAlarm(alarm);        return b ;    }    @Override    public PageInfo<Alarm> selectAlarmListPageInfo(Map<String, Object> map, String pageNum, int size,String alarmRole) {        //查询报警所有信息            //selectByUsers调用的是前面没分页的方法        int page1=0;        int alarmRole1=0;        if(StringUtils.isEmpty(pageNum)){            page1 = Integer.parseInt(pageNum="1");        }else{            page1 = Integer.parseInt(pageNum);        }        PageHelper.startPage(page1,size);        alarmRole1 = Integer.parseInt(alarmRole);        Alarm alarm = new Alarm();        alarm.setAlarmRole(alarmRole1);            List<Alarm> selectAlarmList= alarmDrugManager.selectAlarmList(alarm);            PageInfo<Alarm> alarmListPageInfo = new PageInfo<Alarm>(selectAlarmList);            return alarmListPageInfo;    }    @Override    public List<PhamacyDrug> selectAlarmExpired(Map<String, Object> map) {        List<PhamacyDrug> selectAlarmExpired= alarmDrugManager.selectAlarmExpired(map);        return selectAlarmExpired;    }    @Override    public List<PhamacyDrug> selectAlarmNum(Map<String, Object> map) {        List<PhamacyDrug> selectAlarmNum= alarmDrugManager.selectAlarmNum(map);        return selectAlarmNum;    }    //药库数据低限检测    @Override    public List<DrugStore> selectDrugStoreNum(Map<String, Object> map) {        return alarmDrugManager.selectDrugStoreNum(map);    }    //药库分页查询数量    @Override    public PageInfo<DrugStore> selectDrugStorePageInfo(Map<String, Object> map, String pageNum, int size) {        int page1=0;        if(StringUtils.isEmpty(pageNum)){            page1 = Integer.parseInt(pageNum="1");        }else{            page1 = Integer.parseInt(pageNum);        }        PageHelper.startPage(page1,size);        List<DrugStore> selectAlarmNum= alarmDrugManager.selectDrugStoreNum(map);        PageInfo<DrugStore> phamacyDrugPageInfo = new PageInfo<DrugStore>(selectAlarmNum);        return phamacyDrugPageInfo;    }    @Override    public List<PhamacyDrug> selectAlarmUnsalable(Map<String, Object> map) {        List<PhamacyDrug> selectAlarmUnsalable = alarmDrugManager.selectAlarmUnsalable(map);        return selectAlarmUnsalable;    }    //分页查询低限药品数据    @Override    public PageInfo<PhamacyDrug> selectAlarmNumPageInfo(Map<String, Object> map, String pageNum, int size) {        int page1=0;        if(StringUtils.isEmpty(pageNum)){            page1 = Integer.parseInt(pageNum="1");        }else{            page1 = Integer.parseInt(pageNum);        }        PageHelper.startPage(page1,size);        List<PhamacyDrug> selectAlarmNum= alarmDrugManager.selectAlarmNum(map);        PageInfo<PhamacyDrug> phamacyDrugPageInfo = new PageInfo<PhamacyDrug>(selectAlarmNum);        return phamacyDrugPageInfo;    }    //分页药品过期数据    @Override    public PageInfo<PhamacyDrug> selectAlarmExpiredPageInfo(Map<String, Object> map, String pageNum, int size) {        int page1=0;        if(StringUtils.isEmpty(pageNum)){            page1 = Integer.parseInt(pageNum="1");        }else{            page1 = Integer.parseInt(pageNum);        }        PageHelper.startPage(page1,size);        List<PhamacyDrug> selectAlarmExpired= alarmDrugManager.selectAlarmExpired(map);        PageInfo<PhamacyDrug> phamacyDrugPageInfo = new PageInfo<PhamacyDrug>(selectAlarmExpired);        return phamacyDrugPageInfo;    }    @Override    public PageInfo<PhamacyDrug> selectAlarmUnsalablePageInfo(Map<String, Object> map, String pageNum, int size) {        int page1=0;        if(StringUtils.isEmpty(pageNum)){            page1 = Integer.parseInt(pageNum="1");        }else{            page1 = Integer.parseInt(pageNum);        }        PageHelper.startPage(page1,size);        List<PhamacyDrug> selectAlarmUnsalable= alarmDrugManager.selectAlarmUnsalable(map);        PageInfo<PhamacyDrug> phamacyDrugPageInfo = new PageInfo<PhamacyDrug>(selectAlarmUnsalable);        return phamacyDrugPageInfo;    }    @Override    public void seeDetails(int alarmId) {        alarmDrugManager.seeDetails(alarmId);    }    @Override    public List<AlarmStyle> selectAllStyle() {        return alarmDrugManager.selectAllStyle();    }    @Override    public PageInfo<Alarm> selectAlarmStyleListPageInfo(Map<String, Object> map, String pageNum, int size, String alarmStyleId) {        int page1=0;        int alarmStyleId1 = 0;        if(StringUtils.isEmpty(pageNum)){            page1 = Integer.parseInt(pageNum="1");        }else{            page1 = Integer.parseInt(pageNum);        }        alarmStyleId1= Integer.parseInt(alarmStyleId);        PageHelper.startPage(page1,size);        List<Alarm> selectAlarmStyleList= alarmDrugManager.selectAlarmStyleList(alarmStyleId1);        PageInfo<Alarm> alarmListPageInfo = new PageInfo<Alarm>(selectAlarmStyleList);        return alarmListPageInfo;    }}